import numpy as np

def sort_evens(A: np.ndarray) -> np.ndarray:
    b = A.copy()
    b[b % 2 == 0] = np.sort(b[b % 2 == 0])
    return b
    
# ПРОВЕРКА:
from numpy.testing import assert_array_equal

######################################################
assert_array_equal(sort_evens(np.array([])), np.array([]))
######################################################
A1 = np.array([2, 0])
A2 = np.array([2, 0])
Ans = np.array([0, 2])
assert_array_equal(sort_evens(A1), Ans)
assert_array_equal(A1, A2)
######################################################
assert_array_equal(sort_evens(np.array([2, 0])), np.array([0, 2]))
######################################################
assert_array_equal(sort_evens(np.array([9, 3, 1, 5, 7])), np.array([9, 3, 1, 5, 7]))
######################################################
assert_array_equal(sort_evens(np.array([8, 12, 4, 10, 6, 2])), np.array([2, 4, 6, 8, 10, 12]))
######################################################
assert_array_equal(sort_evens(np.array([8, 5, -4, -1, -10, 9])), np.array([-10, 5, -4, -1, 8, 9]))
######################################################
assert_array_equal(sort_evens(np.array([43, 66, 34, 55, 78, 105, 2])), np.array([43, 2, 34, 55, 66, 105, 78]))
######################################################
assert_array_equal(sort_evens(
    np.array([20, 38, 39, 21, 42, 33, 27, 28, 34,  0, 42, 19, 23, 13, 12, 34, 17, 33, 10,  0, 20, 37, 19, 16,  2, 15, 19, 25,  8, 31])),
    np.array([ 0,  0, 39, 21,  2, 33, 27,  8, 10, 12, 16, 19, 23, 13, 20, 20, 17, 33, 28, 34, 34, 37, 19, 38, 42, 15, 19, 25, 42, 31])
)
######################################################
assert_array_equal(sort_evens(
    np.array([ 52,  63,  86,  72,  91, -50, -48,  56, -18,  65, -61,  61, -35, 38,  19,  88, -43,  74, -31, -49,  34, -62, -30,  26,  79, -66, -6, -18, -73, -52])),
    np.array([-66,  63, -62, -52,  91, -50, -48, -30, -18,  65, -61,  61, -35, -18,  19,  -6, -43,  26, -31, -49,  34,  38,  52,  56,  79,  72, 74,  86, -73,  88])
)
######################################################