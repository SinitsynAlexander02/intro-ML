import numpy as np

def nearest_value(X: np.ndarray, a: float) -> float:
    return X[np.abs(X - a) == np.abs(X - a).min()].min()
	
# ПРОВЕРКА:
from numpy.testing import assert_equal

######################################################
assert_equal(
    nearest_value(np.array([ 1,  2, 13]), 10),
    13)
######################################################
assert_equal(
    nearest_value(np.array([ -1,  0]), -0.5),
    -1)
######################################################
assert_equal(
    nearest_value(np.array([[[ 1], [2],[3]],[[4],[5],[6]]]), 4.5),
    4)
######################################################
assert_equal(
    nearest_value(np.array([[ 1,  2, 13],
                            [15,  6,  8],
                            [ 7, 18,  9]]), 7.2),
    7)
######################################################
assert_equal(
    nearest_value(np.array([[ -1,  -2],
                            [-15,  -6]]), -100),
    -15)
######################################################
assert_equal(
    nearest_value(np.array([[ 2,  2],
                            [12,  12]]), 7),
    2)
######################################################
assert_equal(
    nearest_value(np.array([[ -2,  -2],
                            [-12,  -12]]), -7),
    -12)
######################################################
assert_equal(
    nearest_value(np.array(
      [[18, 26, 21,  1, 14, 13,  6],
       [ 2, 19,  3,  4, 20, 15, 14],
       [25, 25,  6,  4, 14, 12, 16],
       [23, 13,  1,  4, 12,  7,  9],
       [15, 25, 26,  4, 18, 14,  4],
       [11, 10,  7,  2, 12, 12, 15],
       [17, 21, 25, 15, 22, 10, 13]]), 25.1),
    25
)
######################################################
assert_equal(
    nearest_value(np.array(
      [[18, 26, 21,  1, 14, 13,  6],
       [ 2, 19,  3,  4, 20, 15, 14],
       [25, 25,  6,  4, 14, 12, 16],
       [23, 13,  1,  4, 12,  7,  9],
       [15, 25, 26,  4, 18, 14,  4],
       [11, 10,  7,  2, 12, 12, 15],
       [17, 21, 25, 15, 22, 10, 13]]), 25.6),
    26
)
######################################################